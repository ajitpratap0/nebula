{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Nebula",
            "type": "shell",
            "command": "go",
            "args": ["build", "-o", "bin/nebula", "./cmd/nebula"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$go",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "go",
            "args": ["test", "-v", "-race", "./..."],
            "group": "test",
            "problemMatcher": "$go",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Run Benchmarks",
            "type": "shell",
            "command": "go",
            "args": ["test", "-bench=.", "-benchmem", "./tests/benchmarks/..."],
            "group": "test",
            "problemMatcher": "$go",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "goimports",
            "args": ["-w", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "golangci-lint",
            "args": ["run", "--timeout=5m"],
            "group": "build",
            "problemMatcher": {
                "owner": "golangci-lint",
                "source": "golangci-lint",
                "fileLocation": "absolute",
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+): (.+) \\((.+)\\)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4,
                    "code": 5
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Start Hot Reload",
            "type": "shell",
            "command": "air",
            "args": ["-c", ".air.toml"],
            "group": "build",
            "isBackground": true,
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": {
                "owner": "go",
                "source": "air",
                "fileLocation": "absolute",
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "building...",
                    "endsPattern": "running..."
                },
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+): (.+)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test CSV to JSON Pipeline",
            "type": "shell",
            "command": "./bin/nebula",
            "args": [
                "pipeline", "csv", "json",
                "--source-path", "test_input.csv",
                "--dest-path", "test_output.json",
                "--format", "array"
            ],
            "group": "test",
            "dependsOn": "Build Nebula",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Generate Test Data",
            "type": "shell",
            "command": "echo",
            "args": ["-e", "\"name,age,city\\nJohn,30,NYC\\nJane,25,LA\\nBob,35,Chicago\"", ">", "test_input.csv"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Start Development Environment",
            "type": "shell",
            "command": "docker-compose",
            "args": ["-f", "docker-compose.dev.yml", "up", "-d"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Stop Development Environment",
            "type": "shell",
            "command": "docker-compose",
            "args": ["-f", "docker-compose.dev.yml", "down"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "View Logs",
            "type": "shell",
            "command": "docker-compose",
            "args": ["-f", "docker-compose.dev.yml", "logs", "-f", "nebula"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Profile CPU",
            "type": "shell",
            "command": "go",
            "args": ["test", "-bench=.", "-cpuprofile=cpu.prof", "./tests/benchmarks/..."],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Profile Memory",
            "type": "shell",
            "command": "go",
            "args": ["test", "-bench=.", "-memprofile=mem.prof", "./tests/benchmarks/..."],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            }
        },
        {
            "label": "Clean Build Artifacts",
            "type": "shell",
            "command": "rm",
            "args": ["-rf", "bin/", "tmp/", "*.prof", "*.log"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            }
        }
    ]
}